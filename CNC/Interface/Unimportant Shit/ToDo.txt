MEILENSTEIN 1
              Interface (Features)
DONE          Status Tabelle
DONE          Sidebar-Menu
DONE          Transition zwischen Sections (App States)
DONE          GET Integration zum CNC Server ( /api/Status )

              Status Tabelle
DONE?         Spalten sind ID, IP, Task, Workload, Action
DONE          Sortierung nach Workload, IP, Auftrag und Aktiv/Inaktiv
DONE          Inhalte via http://botnet.artificial.engineering/api/Status
?             Automatische Aktualisierung in einem angemessenen Interval        //wie macht man das?
              Anpassung des Farbschemas und des Cell Paddings                   <-- schöne farben suchen
DONE          Transition der Zeile bei hover

WHOLE DONE    Status Tabelle
DONE          Laden der Daten mit XMLHttpRequest Version 2 oder fetch
DONE          NICHT XMLHttpRequest Version 1
DONE          Start / Stop Button als Toggle ohne Funktion

WHOLE DONE    Menu
DONE          Fixierte Positionierung (linksbuendig)
DONE          Inhalte (main) der App sind rechtsbuendig
DONE          Farbanpassungen der Links bei hover und active


MEILENSTEIN 2


Interface
Status Uebersicht (Tabelle)
Status Start/Stop Button (Toggle)
Tasks Uebersicht (Tabelle)
Tasks Formular (select und input Element)

              Interface: Status Uebersicht
DONE          Tabelle mit Spalten ID, IP, Task, Workload, Action
DONE          Action Spalte hat Toggle Button (Start/Stop)
DONE          Action Spalte wird durch workload === 0 bestimmt

WHOLE DONE    Interface: Toggle Button
DONE          Senden der Daten mit XHR Version 2
DONE          POST Request
DONE          status auf true / false toggled Bot Queue

              Interface: Tasks Uebersicht
DONE          Tabelle mit Spalten ID, Type, Input, Output
?             /api/Tasks (GET) Refresh Button                                   Refresh Button? -> wenn gedrückt nur Tabelle neu laden?

WHOLE DONE    Interface: Tasks Formular
DONE          Senden der Daten mit XHR Version 2
DONE          Input Element fuer input Feld
DONE          Select Element fuer type Feld
DONE          type --> Optionen sind hash-md5 , hash-sha256 , crack-md5


WHOLE DONE    API Spezifikation
DONE          Token header fuer jede Gruppe notwendig
DONE IF       POST Requests werden nur mit validem Token akzeptiert
DONE          API Struktur ist /api/Pfad/:id
DONE          GET /api/Pfad liefert Array
DONE          GET /api/Pfad/:id liefert Objekt
DONE          POST /api/Pfad/:id liefert {message:'OK'} oder {message:'NOT OK'}

WHOLE DONE    /api/Status
              GET Request liefert Array an Bot Status Objekten
              Datenverwendung fuer Status Tabelle
              var response = [{
              id: 0,
              ip: '127.0.0.1',
              task: 1,
              workload: 0.0 // 0.0 means inactive, 1.0 means too much to do
              }];

WHOLE DONE    /api/Status
              POST Request akzeptiert status Flag
              Verwendung fuer Toggle Button
              // enables Bot #0
              var data = {
              id: 0,
              status: true
              };

WHOLE DONE    /api/Tasks
              GET Request liefert Array an Auftrag Objekten
              Verwendung fuer Tasks Tabelle
              var response = [{
              id: 0,
              type: 'hash-md5',
              data: {
              input: 'woot',
              output: null // Not computed yet, String if computed
              }
              }];

WHOLE DONE    /api/Tasks
              POST Request akzeptiert Datenobjekt ohne ID
              Verwendung fuer Tasks Formular
              var data = {
              type: 'hash-md5',
              data: {
              input: 'woot' // output is generated by Bots
              }
              };
